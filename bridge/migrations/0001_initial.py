# Generated by Django 4.1.3 on 2023-03-06 03:50

import bridge.models
import django.core.validators
from django.db import migrations, models
import django.utils.timezone
import django_countries.fields
import re
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='VerificationDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=50)),
                ('auth_otp', models.CharField(max_length=50)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('uuid', models.CharField(default=uuid.uuid4, editable=False, max_length=100, unique=True)),
                ('username', models.CharField(blank=True, max_length=150, null=True, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.EmailField(blank=True, max_length=255, null=True, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=13, null=True, unique=True, validators=[django.core.validators.RegexValidator(re.compile('\\d{3}[-\\.\\s]??\\d{3}[-\\.\\s]??\\d{3}[-\\.\\s]??\\d{3}|\\(\\d{3}\\)\\s*\\d{3}[-\\.\\s]??\\d{3}[-\\.\\s]??\\d{3}|\\d{3}[-\\.\\s]??\\d{3}[-\\.\\s]??\\d{3}'), 'Only numbers are allowed in format 000-000-000-000', 'invalid')])),
                ('sex', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'other')], default='', max_length=30)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('accepted_terms', models.BooleanField(default=False)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2)),
                ('nationality', django_countries.fields.CountryField(blank=True, max_length=2)),
                ('city', models.CharField(blank=True, max_length=200)),
                ('token', models.CharField(max_length=1000, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to=bridge.models.get_user_photo_file_path)),
                ('background_photo', models.ImageField(blank=True, null=True, upload_to=bridge.models.get_user_photo_file_path)),
                ('anonymous', models.BooleanField(default=False)),
                ('verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
